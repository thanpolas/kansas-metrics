/**
 * @fileOverview Assertions for results generated by Kansas Metrics
 */

var chai = require('chai');
var expect = chai.expect;

var tester = require('../lib/tester.lib');

/**
 * Test validity of an Athlete Item.
 *
 *
 */
var resultTest = module.exports = {};

/**
 * Run all assertions for the provided items.
 *
 * @param {Array.<Object>} items The items.
 */
resultTest.runAllArray = function (items) {
  items.forEach(resultTest.runAll);
};

/**
 * Run all assertions for the provided item.
 *
 * @param {Object} item The item.
 */
resultTest.runAll = function (item) {
  resultTest.properties(item);
  resultTest.types(item);
  resultTest.values(item);
};

/**
 * Test item has expected properties.
 *
 * @param {Object} item The item.
 */
resultTest.properties = function (item) {
  expect(item).to.be.an('object');
  expect(item).to.have.keys([
    'token',
    'ownerId',
    'policyName',
    'policyLimit',
    'isPolicyCount',
    'month',
    'year',
    'date',
    'period',
    'usage',
  ]);
};

/**
 * Test item properties have right type.
 *
 * @param {Object} clipItem The item.
 */
resultTest.types = function (item) {
  expect(item).to.be.an('object');

  expect(item.token).to.be.a('string');
  expect(item.ownerId).to.be.a('string');
  expect(item.policyName).to.be.a('string');
  expect(item.policyLimit).to.be.a('number');
  expect(item.isPolicyCount).to.be.a('boolean');
  expect(item.month).to.be.a('number');
  expect(item.year).to.be.a('number');
  expect(item.date).to.be.a('string');
  expect(item.period).to.be.a('string');
  expect(item.usage).to.be.a('number');
};

/**
 * Test item has expected values
 *
 * @param {Object} item The item.
 */
resultTest.values = function (item) {
  expect(item).to.be.an('object');

  expect(item.token).to.have.length.of.at.least(10);
  expect(item.ownerId).to.have.length.of.at.least(2);
  expect(item.policyName).to.have.length.of.at.least(3);
  expect(item.date).to.match(tester.reIso8601);
  expect(item.period).to.equal('month');
};

